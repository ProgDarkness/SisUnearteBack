type Mutation {
    obtenerEstudiante(input: InputConsultaEstudiante!): ResultEstudiante
    crearEstudiante(input: InputEstudiante!): ResultEstudiante
    obtenerDetalleCarrera(input: InputCarrera!): ResultCarrera
}

input InputConsultaEstudiante {
    nacionalidad: Int!
    cedula: Int!
}

input InputCarrera {
    carrera: Int!
}

input InputEstudiante {
  nacionalidad: Int!
  cedula: Int!
  nombre: String!
  apellido: String!
  sexo: Int!
}

type Estudiante {
    id: ID!
    nombre: String!
    apellido: String!
    sexo: String!
}

type ResultEstudiante {
    status: Int!
    message: String!
    type: String!
    response: Estudiante
}

type Oferta {
    id: ID!
    periodo: Int!
    anio: Int!
    carrera: String!
    cupos: Int!
    estatus: String!
}

type ResultOferta {
    status: Int!
    message: String!
    type: String!
    response: [Oferta]
}

type DetalleCarrera {
    id: ID!
    carrera: String!
    trayecto: String!
    materia: String!
    personal: String!
    estatus: String!
}

type ResultCarrera {
    status: Int!
    message: String!
    type: String!
    response: [DetalleCarrera]
}