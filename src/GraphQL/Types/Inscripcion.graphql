type Materia {
    id: ID!
    nombre: String!
}

type ResultMaterias {
    status: Int!
    message: String!
    type: String!
    response: [Materia]
}

type Carrera {
    id: ID!
    nombre: String!
}

type ResultCarreras {
    status: Int!
    message: String!
    type: String!
    response: [Carrera]
}

type Query {
    obtenerMaterias: ResultMaterias,
    obtenerCarreras: ResultCarreras
}

type Mutation {
    obtenerEstudiante(input: InputConsultaEstudiante!): ResultEstudiante
    crearEstudiante(input: InputEstudiante!): ResultEstudiante
}

input InputConsultaEstudiante {
    nacionalidad: Int!
    cedula: Int!
}

input InputEstudiante {
  nacionalidad: Int!
  cedula: Int!
  nombre: String!
  apellido: String!
  sexo: Int!
}

type Estudiante {
    id: ID!
    nombre: String!
    apellido: String!
    sexo: String!
}

type ResultEstudiante {
    status: Int!
    message: String!
    type: String!
    response: Estudiante
}