type Materia {
    id: ID!
    nombre: String!
}

type ResultMaterias {
    status: Int!
    message: String!
    type: String!
    response: [Materia]
}

type Carrera {
    id: ID!
    nombre: String!
}

type ResultCarreras {
    status: Int!
    message: String!
    type: String!
    response: [Carrera]
}

type EstatusCarrera {
    id: ID!
    nombre: String!
}

type ResultEstatusCarrera {
    status: Int!
    message: String!
    type: String!
    response: [EstatusCarrera]
}

type TipoCarrera {
    id: ID!
    nombre: String!
}

type ResultTipoCarreras {
    status: Int!
    message: String!
    type: String!
    response: [TipoCarrera]
}

type Nacionalidad {
    id: ID!
    codigo: String!
    nombre: String!
}

type ResultNacionalidades {
    status: Int!
    message: String!
    type: String!
    response: [Nacionalidad]
}

type Sexo {
    id: ID!
    nombre: String!
}

type ResultSexos {
    status: Int!
    message: String!
    type: String!
    response: [Sexo]
}

type Discapacidad {
    id: ID!
    nombre: String!
}

type ResultDiscapacidades {
    status: Int!
    message: String!
    type: String!
    response: [Discapacidad]
}

type Ciudad {
    id: ID!
    nombre: String!
}

type ResultCiudades {
    status: Int!
    message: String!
    type: String!
    response: [Ciudad]
}

type Estado {
    id: ID!
    nombre: String!
}

type ResultEstados {
    status: Int!
    message: String!
    type: String!
    response: [Estado]
}

type Municipio {
    id: ID!
    nombre: String!
}

type ResultMunicipios {
    status: Int!
    message: String!
    type: String!
    response: [Municipio]
}

type Parroquia {
    id: ID!
    nombre: String!
}

type ResultParroquias {
    status: Int!
    message: String!
    type: String!
    response: [Parroquia]
}

type Via {
    id: ID!
    nombre: String!
}

type ResultVias {
    status: Int!
    message: String!
    type: String!
    response: [Via]
}

type Zona {
    id: ID!
    nombre: String!
}

type ResultZonas {
    status: Int!
    message: String!
    type: String!
    response: [Zona]
}

type Vivienda {
    id: ID!
    nombre: String!
}

type ResultViviendas {
    status: Int!
    message: String!
    type: String!
    response: [Vivienda]
}

type Pais {
    id: ID!
    nombre: String!
}

type ResultPaises {
    status: Int!
    message: String!
    type: String!
    response: [Pais]
}

type CodigoPostal {
    id: ID!
    nombre: String!
    parroquia: Int!
    codigo: Int!
}

type ResultCodigoPostal {
    status: Int!
    message: String!
    type: String!
    response: [CodigoPostal]
}

type TipoDocumento {
    id: ID!
    nombre: String!
}

type ResultTipoDocumento {
    status: Int!
    message: String!
    type: String!
    response: [TipoDocumento]
}

type EstadoCivil {
    id: ID!
    nombre: String!
}

type ResultEstadosCiviles {
    status: Int!
    message: String!
    type: String!
    response: [EstadoCivil]
}

type Query {
    obtenerMaterias: ResultMaterias,
    obtenerCarreras: ResultCarreras,
    obtenerTipoCarrera: ResultTipoCarreras,
    obtenerEstatusCarrera: ResultEstatusCarrera,
    obtenerNacionalidades: ResultNacionalidades,
    obtenerSexos: ResultSexos,
    obtenerDiscapacidades: ResultDiscapacidades,
    obtenerCiudades: ResultCiudades,
    obtenerEstados: ResultEstados,
    obtenerMunicipios: ResultMunicipios,
    obtenerParroquias: ResultParroquias,
    obtenerTipoVia: ResultVias,
    obtenerTipoZona: ResultZonas,
    obtenerTipoVivienda: ResultViviendas,
    obtenerPaises: ResultPaises,
    obtenerCodigoPostal: ResultCodigoPostal,
    obtenerTipoDocumento: ResultTipoDocumento
    obtenerEstadoCivil: ResultEstadosCiviles
}

type Mutation {
    obtenerCiudadesPorEstado(input: InputEstado!): ResultCiudad
    obtenerEstadosPorPais(input: InputPais!): ResultPais
    obtenerMunicipiosPorEstado(input: InputEstado!): ResultMunicipiosEstado
    obtenerParrquiasPorMunicipio(input: InputMunicipio!): ResultParroquiasMunicipio
}

input InputEstado {
    estado: Int!
}

type Ciudades {
    id: ID!
    nombre: String!
}

type ResultCiudad {
    status: Int!
    message: String!
    type: String!
    response: [Ciudades]
}

input InputPais {
    pais: Int!
}

type Paises {
    id: ID!
    nombre: String!
}

type ResultPais {
    status: Int!
    message: String!
    type: String!
    response: [Paises]
}

type MunicipioEstado {
    id: ID!
    nombre: String!
}

type ResultMunicipiosEstado {
    status: Int!
    message: String!
    type: String!
    response: [MunicipioEstado]
}

input InputMunicipio {
    municipio: Int!
}

type ParroquiaMunicipio {
    id: ID!
    nombre: String!
}

type ResultParroquiasMunicipio {
    status: Int!
    message: String!
    type: String!
    response: [ParroquiaMunicipio]
}