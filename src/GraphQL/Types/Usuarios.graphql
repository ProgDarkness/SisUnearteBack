type Query {
  getUsuarios: [Usuario]
  getRoles: [roles]
  getInfoUsuario(id_usuario: Int!): resultInfoUsuario!
}

type resultInfoUsuario {
  status: Int!
  type: String!
  message: String!
  response: infoUsuario
}

type Mutation {
  saveUsuario(input: InputSaveUser): Result!
  deleteUsuario(input: InputDeleteUser): Result!
  cambiarEstatus(input: InputDeleteUser): Result!
  crearUsuario(input: InputUsuario): Result!
  actualizarUsuario(input: InputActualizarUsuario): Result!
  obtenerUsuario(input: InputIdUsuario): ResultUsuario
}

type Tnacionalidad {
  id: String!
  codigo: String!
  nombre: String!
}

type TnombZona {
  id: Int!
  nombre: String!
  codigo_postal: String!
}

type simpleDropdown {
  id: String!
  nombre: String!
}

type infoUsuario {
  nacionalidad: Tnacionalidad!
  ced_usuario: String!
  nb_usuario: String!
  ape_usuario: String!
  sexo: simpleDropdown!
  fe_nac_usuario: String!
  paisNac: simpleDropdown!
  pais: simpleDropdown!
  estadoCivil: simpleDropdown!
  correo_usuario: String!
  tpVia: simpleDropdown!
  nb_via: String!
  tpZona: simpleDropdown!
  nombZona: TnombZona!
  tpVivienda: simpleDropdown!
  nu_vivienda: String!
  ciudad: simpleDropdown!
  estado: simpleDropdown!
  municipio: simpleDropdown!
  parroquia: simpleDropdown!
  bl_registro: Boolean!
  nb2_usuario: String!
  ape2_usuario: String!
  discapacidad: simpleDropdown!
  etnia: simpleDropdown!
  estadoNac: simpleDropdown!
  ciudadNac: simpleDropdown!
}

input InputSaveUser {
  nacionalidad: Int!
  usuario: String!
  clave: String!
  id_rol: Int!
  nombre: String!
  apellido: String!
  cedula: Int!
}

input InputDeleteUser {
  id_usuario: Int!
}

input InputUsuario {
  idnacionalidad: Int!
  cedula: Int!
  nombre: String!
  apellido: String!
  sexo: Int!
  fenac: String!
  idpais: Int!
  idcivil: Int!
  correo: String!
  idtpvia: Int!
  nbtpvia: String!
  idtpzona: Int!
  nbzona: String!
  idtpvivienda: Int!
  nuvivienda: String!
  idciudad: Int!
  idestado: Int!
  idmunicipio: Int!
  idparroquia: Int!
  idpostal: Int!
  blregistro: Boolean!
  nombre2: String!
  apellido2: String!
}

input InputActualizarUsuario {
  idnacionalidad: Int!
  cedula: Int!
  nombre: String!
  apellido: String!
  sexo: Int!
  fenac: String!
  idpaisorigen: Int!
  idcivil: Int!
  correo: String!
  idtpvia: Int
  nbtpvia: String
  idtpzona: Int
  nbzona: String
  idtpvivienda: Int!
  nuvivienda: String!
  idciudad: Int
  idestado: Int!
  idmunicipio: Int
  idparroquia: Int
  idpostal: Int
  blregistro: Boolean!
  idusuario: Int!
  nombre2: String!
  apellido2: String!
  idZona: Int
  idpais: Int!
  idDiscapacidad: Int!
  idEtnia: Int
  idEstadoNac: Int!
  idCiudadNac: Int
}

input InputIdUsuario {
  idusuario: Int!
}

type DetalleUsuario {
  id: ID!
  nacionalidad: String!
  cedula: Int!
  nombre: String!
  apellido: String!
  sexo: String!
  fenac: String!
  pais: String!
  civil: String!
  correo: String!
  nbtpbia: String!
  nbvia: String!
  nbtpzona: String!
  nbzona: String!
  nbtpvivienda: String!
  nuvivienda: String!
  ciudad: String!
  estado: String!
  municipio: String!
  parroquia: String!
}

type ResultUsuario {
  status: Int!
  type: String!
  message: String!
  response: DetalleUsuario
}

type Usuario {
  id_usuario: Int!
  user_name: String!
  bl_status: Boolean!
  rol: String!
  ced_usuario: Int!
  nb_usuario: String!
  ape_usuario: String!
  created_at: String!
  updated_at: String!
}

type roles {
  id_rol: Int!
  nb_rol: String!
}

type Result {
  status: Int!
  type: String!
  message: String!
}
