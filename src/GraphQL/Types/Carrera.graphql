type Mutation {
  crearCarrera(input: InputCrearCarrera!): ResultadoCarrera!
  actualizarCarrera(input: InputActualizarCarrera!): ResultadoCarrera!
  eliminarCarrera(input: InputEliminarCarrera!): ResultadoCarrera!
  actualizarEstatusCarrera(input: InputEstatusCarrera!): ResultadoCarrera!
}

input InputCarrera {
  carrera: Int!
}

type DetalleCarrera {
  idTrayectoCarrera: Int!
  nb_trayecto: String!
  id_materia: Int
  nb_materia: String
}

type ResultCarrera {
  status: Int!
  message: String!
  type: String!
  response: [DetalleCarrera]
}

input InputCrearCarrera {
  codigo: String!
  nombre: String!
  tipo: Int!
  ciclo: Int!
  titulo: String!
  cantTrayectos: Int!
  sede: Int!
}

input InputActualizarCarrera {
  codigo: String!
  nombre: String!
  tipo: Int!
  ciclo: Int!
  titulo: String!
  idcarrera: Int!
}

input InputEliminarCarrera {
  idcarrera: Int!
}

type ResultadoCarrera {
  status: Int!
  message: String!
  type: String!
}

input InputEstatusCarrera {
  estatus: Int!
  idcarrera: Int!
}

type Query {
  obtenerTodasCarreras: ResultTodasCarreras
  obtenerDetalleCarrera(input: InputCarrera!): ResultCarrera
}

type Carreras {
  id: ID!
  codigo: String!
  nombre: String!
  tipo: String!
  ciclo: String!
  estatus: String!
  titulo: String!
}

type ResultTodasCarreras {
  status: Int!
  message: String!
  type: String!
  response: [Carreras]
}
