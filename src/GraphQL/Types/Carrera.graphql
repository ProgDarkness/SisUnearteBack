type Mutation {
  crearCarrera(input: InputCrearCarrera!): ResultadoCarrera!
  actualizarCarrera(input: InputActualizarCarrera!): ResultadoCarrera!
  eliminarCarrera(input: InputEliminarCarrera!): ResultadoCarrera!
  actualizarEstatusCarrera(input: InputEstatusCarrera!): ResultadoCarrera!
  asignarTrayectoMateria(
    idCarrera: Int!
    idTrayecto: Int!
    idMateria: Int!
  ): ResultAsigTrayect!
  desasignarTrayectoMateria(idCarrema: Int!): ResultAsigTrayect!
  asignarSedeCarrera(idCarrera: Int!, idSede: Int!): ResultAsigTrayect!
  eliminarSedeCarrera(idSedeCarrera: Int!, idCarrera: Int!): ResultAsigTrayect!
  obtenerSedeCarrera(idCarrera: Int!): ResultAsigTrayect!
}

type Query {
  obtenerTodasCarreras: ResultTodasCarreras
  obtenerTodasMallas: ResultTodasCarreras
  obtenerDetalleCarrera(input: InputCarrera!): ResultCarrera
  obtenerMateriasPorCarrera(carrera: Int!): ResultMateCarre
  obtenerTrayectosPorCarrera(carrera: Int!): ResultTraCarre
  obtenerSedeCarreras: [ResultSedeCarrera]
  obtenerCrudSede: ResultCrudSede
  obtenerCrudEstados: ResultCrudEstados
}

type ResultCrudSede {
  status: Int!
  message: String!
  type: String!
  response: [sede]
}

type ResultCrudEstados {
  status: Int!
  message: String!
  type: String!
  response: [estadosCrud]
}

type estadosCrud {
  id: Int!
  nombre: Int!
}

type sede {
  id_sede: Int!
  co_sede: String!
  nb_sede: String!
  id_geografico_sede: Int!
  id_estatus: Int!
  estatus: String!
}

type ResultSedeCarrera {
  id_scarrera: Int!
  id_sede: Int!
  nb_sede: String!
  id_carrera: Int!
  nb_carrera: String!
}

type ResultAsigTrayect {
  status: Int!
  message: String!
  type: String!
}

type ResultTraCarre {
  status: Int!
  message: String!
  type: String!
  response: [trayecto]
}

type trayecto {
  id: ID!
  nombre: String!
}

type ResultMateCarre {
  status: Int!
  message: String!
  type: String!
  response: [materias]
}

type materias {
  id: ID!
  nombre: String!
}

input InputCarrera {
  carrera: Int!
}

type DetalleCarrera {
  id_carrema: Int!
  idTrayectoCarrera: Int!
  nb_trayecto: String!
  id_materia: Int
  nb_materia: String
}

type ResultCarrera {
  status: Int!
  message: String!
  type: String!
  response: [DetalleCarrera]
}

input InputCrearCarrera {
  codigo: String!
  nombre: String!
  tipo: Int!
  ciclo: Int!
  titulo: Int!
  cantTrayectos: Int!
}

input InputActualizarCarrera {
  codigo: String!
  nombre: String!
  tipo: Int!
  ciclo: Int!
  titulo: String!
  idcarrera: Int!
}

input InputEliminarCarrera {
  idcarrera: Int!
}

type ResultadoCarrera {
  status: Int!
  message: String!
  type: String!
}

input InputEstatusCarrera {
  estatus: Int!
  idcarrera: Int!
}

type Carreras {
  id: ID!
  codigo: String!
  nombre: String!
  tipo: String!
  ciclo: String!
  estatus: String!
  titulo: String!
  sede: String
}

type ResultTodasCarreras {
  status: Int!
  message: String!
  type: String!
  response: [Carreras]
}
