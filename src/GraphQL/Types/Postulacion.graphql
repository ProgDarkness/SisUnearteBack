type EstatuPostulacion {
  id: ID!
  nombre: String!
}

type ResultEstatuPostulacion {
  status: Int!
  message: String!
  type: String!
  response: [EstatuPostulacion]
}

type PostuladoAgrupadoCarrera {
  id: ID!
  idusuario: Int!
  nacionalidad: String!
  cedula: Int!
  nombre: String!
  apellido: String!
  fepostulacion: String!
  observacion: String!
  estatus: String!
  periodo: String!
  tperiodo: String!
  carrera: String!
  sede: String!
  estado: String!
}

type ResultPostuladoAgrupadoCarrera {
  status: Int!
  message: String!
  type: String!
  response: [PostuladoAgrupadoCarrera]
}

type Query {
  obtenerEstatusPostulacion: ResultEstatuPostulacion
  obtenerListadoPostuladoCarrera: ResultPostuladoAgrupadoCarrera
}

type Mutation {
  crearPostulacion(input: InputPostulacion): ResultPostulacion!
  aprobarPostulacion(input: InputAprobarPostulacion): ResultAprobarPostulacion!
}

input InputPostulacion {
  usuario: Int!
  carrera: Int!
  sede: Int!
  fepostulacion: String!
}

type ResultPostulacion {
  status: Int!
  type: String!
  message: String!
}

input InputAprobarPostulacion {
  estatus: Int!
  usuario: Int!
  feaprobacion: String!
  observacion: String!
  idpostulacion: Int!
}

type ResultAprobarPostulacion {
  status: Int!
  type: String!
  message: String!
}
