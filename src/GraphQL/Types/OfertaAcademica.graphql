type Mutation {
  crearOferta(input: InputOferta!): ResultadOferta!
  eliminarOferta(idOferta: Int!): ResultadOferta!
}

input InputOferta {
  periodo: Int!
  carrera: Int!
  cupos: Int!
  seccion: Int!
  sede: Int!
  materia: Int!
  trayecto: Int!
}

type ResultadOferta {
  status: Int!
  message: String!
  type: String!
}

type Query {
  obtenerOfertaAcademica: ResultOferta
  obtenerDetalleMalla(carrera: Int!): ResultMallaDetalle
  obtenerPeridosOferta: ResultPeridosOferta
  obtenerPersonalOferta: ResultPeridosOferta
  obtenerMateriasMalla(carrera: Int!, trayecto: Int!): ResultMateriasOfertaMalla
}

type ResultMateriasOfertaMalla {
  status: Int!
  message: String!
  type: String!
  response: [materiasOfert]
}

type materiasOfert {
  id_carrema: Int
  idtrayectocarrera: Int
  nb_trayecto: String
  id_materia: Int
  nb_materia: String
  id_personal: Int
  personal: String
}

type ResultPeridosOferta {
  status: Int!
  message: String!
  type: String!
  response: [PeriodosOfer]
}

type PeriodosOfer {
  id: Int!
  nombre: String!
}

type DetalleMalla {
  id_carrema: Int!
  idtrayectocarrera: Int!
  nb_trayecto: String!
  id_materia: Int
  nb_materia: String
  id_personal: Int
  personal: String
}

type ResultMallaDetalle {
  status: Int!
  message: String!
  type: String!
  response: [DetalleMalla]
}

type Oferta {
  id_oferta: Int!
  co_oferta: String!
  tx_mensaje: String!
  id_carrera: Int!
  nb_carrera: String!
  nb_tp_carrera: String!
  nb_ciclo: String!
  nu_cupos: Int!
  nu_seccion: Int!
  id_sede: Int!
  nb_sede: String!
  id_estatus_oferta: Int!
  nb_estatus_oferta: String!
}

type ResultOferta {
  status: Int!
  message: String!
  type: String!
  response: [Oferta]
}
